// ======================================================================
// \title  DataPacketSerializableAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for DataPacket struct
// ======================================================================

#ifndef OBC_project_DataPacketSerializableAc_HPP
#define OBC_project_DataPacketSerializableAc_HPP

#include "FpConfig.hpp"
#include "Fw/Types/Serializable.hpp"
#include "Fw/Types/String.hpp"

namespace OBC_project {

  //! A data packet
  class DataPacket :
    public Fw::Serializable
  {

    public:

      // ----------------------------------------------------------------------
      // StringSize10 class
      // ----------------------------------------------------------------------

      class StringSize10 :
        public Fw::StringBase
      {

        public:

          enum {
            //! The size of the string length plus the size of the string buffer
            SERIALIZED_SIZE = sizeof(FwBuffSizeType) + 10
          };

          //! Default constructor
          StringSize10();

          //! Char array constructor
          StringSize10(const char* src);

          //! String base constructor
          StringSize10(const Fw::StringBase& src);

          //! Copy constructor
          StringSize10(const StringSize10& src);

          //! Destructor
          ~StringSize10();

          //! Copy assignment operator
          StringSize10& operator=(const StringSize10& other);

          //! String base assignment operator
          StringSize10& operator=(const Fw::StringBase& other);

          //! char* assignment operator
          StringSize10& operator=(const char* other);

          //! Retrieves char buffer of string
          const char* toChar() const;

          NATIVE_UINT_TYPE getCapacity() const;

        private:

          char m_buf[10]; //!< Buffer for string storage

      };

    public:

      // ----------------------------------------------------------------------
      // Constants
      // ----------------------------------------------------------------------

      enum {
        //! The size of the serial representation
        SERIALIZED_SIZE =
          StringSize10::SERIALIZED_SIZE +
          StringSize10::SERIALIZED_SIZE
      };

    public:

      // ----------------------------------------------------------------------
      // Constructors
      // ----------------------------------------------------------------------

      //! Constructor (default value)
      DataPacket();

      //! Member constructor
      DataPacket(
          const StringSize10& destination,
          const StringSize10& message
      );

      //! Copy constructor
      DataPacket(
          const DataPacket& obj //!< The source object
      );

    public:

      // ----------------------------------------------------------------------
      // Operators
      // ----------------------------------------------------------------------

      //! Copy assignment operator
      DataPacket& operator=(
          const DataPacket& obj //!< The source object
      );

      //! Equality operator
      bool operator==(
          const DataPacket& obj //!< The other object
      ) const;

      //! Inequality operator
      bool operator!=(
          const DataPacket& obj //!< The other object
      ) const;

#ifdef BUILD_UT

      //! Ostream operator
      friend std::ostream& operator<<(
          std::ostream& os, //!< The ostream
          const DataPacket& obj //!< The object
      );

#endif

    public:

      // ----------------------------------------------------------------------
      // Member functions
      // ----------------------------------------------------------------------

      //! Serialization
      Fw::SerializeStatus serialize(
          Fw::SerializeBufferBase& buffer //!< The serial buffer
      ) const;

      //! Deserialization
      Fw::SerializeStatus deserialize(
          Fw::SerializeBufferBase& buffer //!< The serial buffer
      );

#if FW_SERIALIZABLE_TO_STRING || BUILD_UT

      //! Convert struct to string
      void toString(
          Fw::StringBase& sb //!< The StringBase object to hold the result
      ) const;

#endif

      // ----------------------------------------------------------------------
      // Getter functions
      // ----------------------------------------------------------------------

      //! Get member destination
      StringSize10& getdestination()
      {
        return this->destination;
      }

      //! Get member destination (const)
      const StringSize10& getdestination() const
      {
        return this->destination;
      }

      //! Get member message
      StringSize10& getmessage()
      {
        return this->message;
      }

      //! Get member message (const)
      const StringSize10& getmessage() const
      {
        return this->message;
      }

      // ----------------------------------------------------------------------
      // Setter functions
      // ----------------------------------------------------------------------

      //! Set all members
      void set(
          const StringSize10& destination,
          const StringSize10& message
      );

      //! Set member destination
      void setdestination(const StringSize10& destination);

      //! Set member message
      void setmessage(const StringSize10& message);

    protected:

      // ----------------------------------------------------------------------
      // Member variables
      // ----------------------------------------------------------------------

      StringSize10 destination;
      StringSize10 message;

  };

}

#endif
